<?xml version="1.0" encoding="UTF-8"?>
<graph xmlns="urn:app:graph" version="1.0" directed="true">
  <nodes>
    <node id="string-utils-component" title="StringUtils Component" x="100" y="100" z="0">
      <description>A utility component providing string manipulation operations including capitalization, reversal, palindrome checking, and truncation. Implements common string processing methods used across the application.</description>
      <metadata>
        <files>
          <file>eval/src/testScript.ts</file>
        </files>
      </metadata>
      <props>
        <prop name="component-id" title="Component ID" type="text">string-utils</prop>
        <prop name="description" title="Description" type="text">Utility class providing string manipulation methods</prop>
        <prop name="layer" title="Layer" type="select">
          <value>Utility</value>
          <options>
          <option>Presentation</option>
          <option>Business</option>
          <option>Data</option>
          <option>Utility</option>
          </options>
        </prop>
        <prop name="stereotype" title="Stereotype" type="select">
          <value>Utility</value>
          <options>
          <option>Service</option>
          <option>Repository</option>
          <option>Controller</option>
          <option>Utility</option>
          <option>Entity</option>
          </options>
        </prop>
        <prop name="language" title="Language" type="text">TypeScript</prop>
        <prop name="stateful" title="Stateful" type="boolean">false</prop>
        <prop name="deterministic" title="Deterministic" type="boolean">true</prop>
        <prop name="purity" title="Purity" type="select">
          <value>Pure</value>
          <options>
          <option>Pure</option>
          <option>Impure</option>
          <option>Mixed</option>
          </options>
        </prop>
        <prop name="provided-interfaces" title="Provided Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">capitalize</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">reverse</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">isPalindrome</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">truncate</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
      </prop>
        <prop name="operations" title="Operations" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">capitalize</field>
          <field name="category" title="Category" type="text">transformation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">reverse</field>
          <field name="category" title="Category" type="text">transformation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">isPalindrome</field>
          <field name="category" title="Category" type="text">validation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">truncate</field>
          <field name="category" title="Category" type="text">transformation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
      </prop>
        <prop name="performance" title="Performance" type="object">
        <field name="complexity" title="Complexity" type="text">O(n)</field>
        <field name="latency" title="Latency" type="text">low</field>
      </prop>
      </props>
    </node>

    <node id="math-utils-component" title="MathUtils Component" x="300" y="100" z="0">
      <description>A utility component providing mathematical operations including factorial, fibonacci, prime checking, and GCD calculations. Implements common mathematical algorithms used across the application.</description>
      <metadata>
        <files>
          <file>eval/src/testScript.ts</file>
        </files>
      </metadata>
      <props>
        <prop name="math-utils-component-component-id" title="Component ID" type="text">math-utils</prop>
        <prop name="math-utils-component-description" title="Description" type="text">Utility class providing mathematical operations</prop>
        <prop name="math-utils-component-layer" title="Layer" type="select">
          <value>Utility</value>
          <options>
          <option>Presentation</option>
          <option>Business</option>
          <option>Data</option>
          <option>Utility</option>
          </options>
        </prop>
        <prop name="math-utils-component-stereotype" title="Stereotype" type="select">
          <value>Utility</value>
          <options>
          <option>Service</option>
          <option>Repository</option>
          <option>Controller</option>
          <option>Utility</option>
          <option>Entity</option>
          </options>
        </prop>
        <prop name="math-utils-component-language" title="Language" type="text">TypeScript</prop>
        <prop name="math-utils-component-stateful" title="Stateful" type="boolean">false</prop>
        <prop name="math-utils-component-deterministic" title="Deterministic" type="boolean">true</prop>
        <prop name="math-utils-component-purity" title="Purity" type="select">
          <value>Pure</value>
          <options>
          <option>Pure</option>
          <option>Impure</option>
          <option>Mixed</option>
          </options>
        </prop>
        <prop name="math-utils-component-provided-interfaces" title="Provided Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">factorial</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">fibonacci</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">isPrime</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">gcd</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
      </prop>
        <prop name="math-utils-component-operations" title="Operations" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">factorial</field>
          <field name="category" title="Category" type="text">calculation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">fibonacci</field>
          <field name="category" title="Category" type="text">calculation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">isPrime</field>
          <field name="category" title="Category" type="text">validation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">gcd</field>
          <field name="category" title="Category" type="text">calculation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="data-processor-component" title="DataProcessor Component" x="500" y="100" z="0">
      <description>A data management component that stores and processes User and Product entities. Provides filtering, aggregation, and retrieval operations for users and products.</description>
      <metadata>
        <files>
          <file>eval/src/testScript.ts</file>
        </files>
      </metadata>
      <props>
        <prop name="data-processor-component-component-id" title="Component ID" type="text">data-processor</prop>
        <prop name="data-processor-component-description" title="Description" type="text">Component for managing and processing user and product data</prop>
        <prop name="data-processor-component-layer" title="Layer" type="select">
          <value>Data</value>
          <options>
          <option>Presentation</option>
          <option>Business</option>
          <option>Data</option>
          <option>Utility</option>
          </options>
        </prop>
        <prop name="data-processor-component-stereotype" title="Stereotype" type="select">
          <value>Repository</value>
          <options>
          <option>Service</option>
          <option>Repository</option>
          <option>Controller</option>
          <option>Utility</option>
          <option>Entity</option>
          </options>
        </prop>
        <prop name="data-processor-component-language" title="Language" type="text">TypeScript</prop>
        <prop name="data-processor-component-stateful" title="Stateful" type="boolean">true</prop>
        <prop name="data-processor-component-deterministic" title="Deterministic" type="boolean">true</prop>
        <prop name="data-processor-component-provided-interfaces" title="Provided Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">addUser</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">addProduct</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">getUsersByAge</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">getProductsByCategory</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="4">
          <field name="name" title="Name" type="text">getAverageUserAge</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="5">
          <field name="name" title="Name" type="text">getTotalProductValue</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
      </prop>
        <prop name="data-processor-component-operations" title="Operations" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">addUser</field>
          <field name="category" title="Category" type="text">mutation</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">addProduct</field>
          <field name="category" title="Category" type="text">mutation</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">getUsersByAge</field>
          <field name="category" title="Category" type="text">query</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">getProductsByCategory</field>
          <field name="category" title="Category" type="text">query</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="4">
          <field name="name" title="Name" type="text">getAverageUserAge</field>
          <field name="category" title="Category" type="text">aggregation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="5">
          <field name="name" title="Name" type="text">getTotalProductValue</field>
          <field name="category" title="Category" type="text">aggregation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="user-service-component" title="UserService Component" x="100" y="300" z="0">
      <description>A service component that manages user operations including creation, validation, and summary generation. Uses DataProcessor for persistence and StringUtils for data normalization.</description>
      <metadata>
        <files>
          <file>eval/src/testScript.ts</file>
        </files>
      </metadata>
      <props>
        <prop name="user-service-component-component-id" title="Component ID" type="text">user-service</prop>
        <prop name="user-service-component-description" title="Description" type="text">Service for managing user creation, validation, and reporting</prop>
        <prop name="user-service-component-layer" title="Layer" type="select">
          <value>Business</value>
          <options>
          <option>Presentation</option>
          <option>Business</option>
          <option>Data</option>
          <option>Utility</option>
          </options>
        </prop>
        <prop name="user-service-component-stereotype" title="Stereotype" type="select">
          <value>Service</value>
          <options>
          <option>Service</option>
          <option>Repository</option>
          <option>Controller</option>
          <option>Utility</option>
          <option>Entity</option>
          </options>
        </prop>
        <prop name="user-service-component-language" title="Language" type="text">TypeScript</prop>
        <prop name="user-service-component-stateful" title="Stateful" type="boolean">true</prop>
        <prop name="user-service-component-deterministic" title="Deterministic" type="boolean">true</prop>
        <prop name="required-interfaces" title="Required Interfaces" type="object-list">
        <item index="0">
          <field name="component" title="Component" type="text">DataProcessor</field>
          <field name="interface" title="Interface" type="text">addUser</field>
        </item>
        <item index="1">
          <field name="component" title="Component" type="text">DataProcessor</field>
          <field name="interface" title="Interface" type="text">getUsersByAge</field>
        </item>
        <item index="2">
          <field name="component" title="Component" type="text">DataProcessor</field>
          <field name="interface" title="Interface" type="text">getAverageUserAge</field>
        </item>
        <item index="3">
          <field name="component" title="Component" type="text">StringUtils</field>
          <field name="interface" title="Interface" type="text">capitalize</field>
        </item>
      </prop>
        <prop name="user-service-component-provided-interfaces" title="Provided Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">createUser</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">getUserSummary</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">validateEmail</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
      </prop>
        <prop name="user-service-component-operations" title="Operations" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">createUser</field>
          <field name="category" title="Category" type="text">mutation</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">getUserSummary</field>
          <field name="category" title="Category" type="text">query</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">validateEmail</field>
          <field name="category" title="Category" type="text">validation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="product-service-component" title="ProductService Component" x="300" y="300" z="0">
      <description>A service component that manages product operations including creation, discount calculation, and statistics generation. Uses DataProcessor for persistence and StringUtils for data normalization.</description>
      <metadata>
        <files>
          <file>eval/src/testScript.ts</file>
        </files>
      </metadata>
      <props>
        <prop name="product-service-component-component-id" title="Component ID" type="text">product-service</prop>
        <prop name="product-service-component-description" title="Description" type="text">Service for managing product creation, pricing, and statistics</prop>
        <prop name="product-service-component-layer" title="Layer" type="select">
          <value>Business</value>
          <options>
          <option>Presentation</option>
          <option>Business</option>
          <option>Data</option>
          <option>Utility</option>
          </options>
        </prop>
        <prop name="product-service-component-stereotype" title="Stereotype" type="select">
          <value>Service</value>
          <options>
          <option>Service</option>
          <option>Repository</option>
          <option>Controller</option>
          <option>Utility</option>
          <option>Entity</option>
          </options>
        </prop>
        <prop name="product-service-component-language" title="Language" type="text">TypeScript</prop>
        <prop name="product-service-component-stateful" title="Stateful" type="boolean">true</prop>
        <prop name="product-service-component-deterministic" title="Deterministic" type="boolean">true</prop>
        <prop name="product-service-component-required-interfaces" title="Required Interfaces" type="object-list">
        <item index="0">
          <field name="component" title="Component" type="text">DataProcessor</field>
          <field name="interface" title="Interface" type="text">addProduct</field>
        </item>
        <item index="1">
          <field name="component" title="Component" type="text">DataProcessor</field>
          <field name="interface" title="Interface" type="text">getProductsByCategory</field>
        </item>
        <item index="2">
          <field name="component" title="Component" type="text">DataProcessor</field>
          <field name="interface" title="Interface" type="text">getTotalProductValue</field>
        </item>
        <item index="3">
          <field name="component" title="Component" type="text">StringUtils</field>
          <field name="interface" title="Interface" type="text">capitalize</field>
        </item>
      </prop>
        <prop name="product-service-component-provided-interfaces" title="Provided Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">createProduct</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">calculateDiscountedPrice</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">getProductStatistics</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
      </prop>
        <prop name="product-service-component-operations" title="Operations" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">createProduct</field>
          <field name="category" title="Category" type="text">mutation</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">calculateDiscountedPrice</field>
          <field name="category" title="Category" type="text">calculation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">getProductStatistics</field>
          <field name="category" title="Category" type="text">aggregation</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="service-factory-component" title="ServiceFactory Component" x="500" y="300" z="0">
      <description>A factory component that creates and manages service instances. Ensures all services share the same DataProcessor instance for consistent data management.</description>
      <metadata>
        <files>
          <file>eval/src/testScript.ts</file>
        </files>
      </metadata>
      <props>
        <prop name="service-factory-component-component-id" title="Component ID" type="text">service-factory</prop>
        <prop name="service-factory-component-description" title="Description" type="text">Factory for creating service instances with shared dependencies</prop>
        <prop name="service-factory-component-layer" title="Layer" type="select">
          <value>Business</value>
          <options>
          <option>Presentation</option>
          <option>Business</option>
          <option>Data</option>
          <option>Utility</option>
          </options>
        </prop>
        <prop name="service-factory-component-stereotype" title="Stereotype" type="select">
          <value>Service</value>
          <options>
          <option>Service</option>
          <option>Repository</option>
          <option>Controller</option>
          <option>Utility</option>
          <option>Entity</option>
          </options>
        </prop>
        <prop name="service-factory-component-language" title="Language" type="text">TypeScript</prop>
        <prop name="service-factory-component-stateful" title="Stateful" type="boolean">true</prop>
        <prop name="service-factory-component-deterministic" title="Deterministic" type="boolean">true</prop>
        <prop name="service-factory-component-provided-interfaces" title="Provided Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">createUserService</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">createProductService</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">getDataProcessor</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
      </prop>
        <prop name="service-factory-component-operations" title="Operations" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">createUserService</field>
          <field name="category" title="Category" type="text">factory</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">createProductService</field>
          <field name="category" title="Category" type="text">factory</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">getDataProcessor</field>
          <field name="category" title="Category" type="text">accessor</field>
          <field name="side-effects" title="Side Effects" type="boolean">false</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="application-component" title="Application Component" x="300" y="500" z="0">
      <description>The main application orchestration component that coordinates all services and demonstrates functionality. Runs palindrome demos, math utilities demos, and service demonstrations.</description>
      <metadata>
        <files>
          <file>eval/src/testScript.ts</file>
        </files>
      </metadata>
      <props>
        <prop name="application-component-component-id" title="Component ID" type="text">application</prop>
        <prop name="application-component-description" title="Description" type="text">Main orchestration component coordinating all services and demonstrations</prop>
        <prop name="application-component-layer" title="Layer" type="select">
          <value>Presentation</value>
          <options>
          <option>Presentation</option>
          <option>Business</option>
          <option>Data</option>
          <option>Utility</option>
          </options>
        </prop>
        <prop name="application-component-stereotype" title="Stereotype" type="select">
          <value>Controller</value>
          <options>
          <option>Service</option>
          <option>Repository</option>
          <option>Controller</option>
          <option>Utility</option>
          <option>Entity</option>
          </options>
        </prop>
        <prop name="application-component-language" title="Language" type="text">TypeScript</prop>
        <prop name="application-component-stateful" title="Stateful" type="boolean">true</prop>
        <prop name="application-component-deterministic" title="Deterministic" type="boolean">false</prop>
        <prop name="application-component-required-interfaces" title="Required Interfaces" type="object-list">
        <item index="0">
          <field name="component" title="Component" type="text">ServiceFactory</field>
          <field name="interface" title="Interface" type="text">createUserService</field>
        </item>
        <item index="1">
          <field name="component" title="Component" type="text">ServiceFactory</field>
          <field name="interface" title="Interface" type="text">createProductService</field>
        </item>
        <item index="2">
          <field name="component" title="Component" type="text">StringUtils</field>
          <field name="interface" title="Interface" type="text">isPalindrome</field>
        </item>
        <item index="3">
          <field name="component" title="Component" type="text">MathUtils</field>
          <field name="interface" title="Interface" type="text">factorial</field>
        </item>
        <item index="4">
          <field name="component" title="Component" type="text">MathUtils</field>
          <field name="interface" title="Interface" type="text">fibonacci</field>
        </item>
        <item index="5">
          <field name="component" title="Component" type="text">MathUtils</field>
          <field name="interface" title="Interface" type="text">isPrime</field>
        </item>
        <item index="6">
          <field name="component" title="Component" type="text">MathUtils</field>
          <field name="interface" title="Interface" type="text">gcd</field>
        </item>
      </prop>
        <prop name="application-component-provided-interfaces" title="Provided Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">run</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">runPalindromeDemo</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">runMathDemo</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">runServiceDemo</field>
          <field name="kind" title="Kind" type="select">
          <value>sync</value>
          <options>
          <option>sync</option>
          <option>async</option>
          <option>event</option>
          </options>
        </field>
          <field name="protocol" title="Protocol" type="text">method</field>
        </item>
      </prop>
        <prop name="application-component-operations" title="Operations" type="object-list">
        <item index="0">
          <field name="name" title="Name" type="text">run</field>
          <field name="category" title="Category" type="text">orchestration</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
        <item index="1">
          <field name="name" title="Name" type="text">runPalindromeDemo</field>
          <field name="category" title="Category" type="text">demonstration</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
        <item index="2">
          <field name="name" title="Name" type="text">runMathDemo</field>
          <field name="category" title="Category" type="text">demonstration</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
        <item index="3">
          <field name="name" title="Name" type="text">runServiceDemo</field>
          <field name="category" title="Category" type="text">demonstration</field>
          <field name="side-effects" title="Side Effects" type="boolean">true</field>
        </item>
      </prop>
      </props>
    </node>
  </nodes>

  <edges>

  </edges>
</graph>
