import React from "react";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { getVar } from "@/lib/vars";
import { Container } from "@/components/ui/container";
import { Section } from "@/components/ui/section";

export default function Page() {
  const cssVars = {
    "--background-color": getVar("background-color", "#0b090a"),
    "--text-color": getVar("text-color", "#f5f3f4"),
    "--accent-color": getVar("accent-color", "#e5383b"),
    "--muted-color": getVar("muted-color", "#b1a7a6"),
    "--border-color": getVar("border-color", "#161a1d"),
    "--font-family": getVar("font-family", "Poppins"),
    "--base-font-size": getVar("base-font-size", "1rem"),
    "--max-content-width": getVar("max-content-width", "256px"),
    "--section-padding-y": getVar("section-padding-y", "48px"),
    "--section-padding-x": getVar("section-padding-x", "24px"),
    "--border-radius-global": getVar("border-radius-global", "12px"),
  } as React.CSSProperties;

  const navLinks = getVar("nav-links", "Home, Projects, About, Contact")
    .split(",")
    .map((s: string) => s.trim())
    .filter(Boolean);

  const social = [
    { name: "GitHub", url: getVar("social-github", "#") },
    { name: "LinkedIn", url: getVar("social-linkedin", "#") },
    { name: "Twitter", url: getVar("social-twitter", "#") },
  ];

  const projects = [
    {
      title: getVar("project-1-title", "Realtime Dashboard"),
      description: getVar(
        "project-1-description",
        "Operational analytics dashboard with live data and custom charts."
      ),
      image: getVar(
        "project-1-image",
        "https://placehold.co/512x400/white/black?text=Realtime+Dashboard&font=Poppins"
      ),
      tech: getVar("project-1-tech", "Next.js, TypeScript, WebSocket, Tailwind"),
      github: getVar("project-1-github", "#"),
      live: getVar("project-1-live", "#"),
    },
    {
      title: getVar("project-2-title", "API Platform"),
      description: getVar(
        "project-2-description",
        "Scalable REST and GraphQL APIs with robust observability."
      ),
      image: getVar(
        "project-2-image",
        "https://placehold.co/512x400/white/black?text=API+Platform&font=Poppins"
      ),
      tech: getVar("project-2-tech", "Node.js, TypeScript, PostgreSQL, Docker, AWS"),
      github: getVar("project-2-github", "#"),
      live: getVar("project-2-live", "#"),
    },
    {
      title: getVar("project-3-title", "Design System"),
      description: getVar(
        "project-3-description",
        "Reusable UI kit and tokens built with Radix and Tailwind."
      ),
      image: getVar(
        "project-3-image",
        "https://placehold.co/512x400/white/black?text=Design+System&font=Poppins"
      ),
      tech: getVar("project-3-tech", "React, TypeScript, Radix UI, Tailwind"),
      github: getVar("project-3-github", "#"),
      live: getVar("project-3-live", "#"),
    },
  ];

  const skills = getVar(
    "skills-list",
    "TypeScript, React, Next.js, Node.js, PostgreSQL, AWS, Docker, CI/CD, Testing, Design Systems"
  )
    .split(",")
    .map((s: string) => s.trim())
    .filter(Boolean);

  const tags = getVar(
    "tags",
    "Next.js, TypeScript, Node.js, React, Tailwind, AWS, Docker, PostgreSQL"
  )
    .split(",")
    .map((s: string) => s.trim())
    .filter(Boolean);

  return (
    <main
      id="portfolio-page"
      className="min-h-screen bg-[var(--background-color)] text-[var(--text-color)] antialiased selection:bg-[var(--accent-color)]/20 selection:text-white" 
    >
      {/* Header / Navigation */}
      <header
        id="header"
        className={
          "w-full top-0 z-30 backdrop-blur-sm/10" +
          " bg-[color:var(--background-color)]/60 border-b border-[var(--border-color)]"
        }
        style={{ padding: `${getVar("header-padding-y", "16px")} ${getVar("header-padding-x", "24px")}` }}
      >
        <nav className="mx-auto flex max-w-[var(--max-content-width)] items-center justify-between gap-6">
          <div className="flex items-center gap-3">
            <div className="flex flex-col leading-tight">
              <span style={{ fontSize: getVar("brand-font-size", "1.5rem"), fontWeight: 700 }}>
                {getVar("brand-name", "Alex Johnson")}
              </span>
              <small className="text-[var(--muted-color)]">{getVar("brand-subtitle", "Software Engineer")}</small>
            </div>
          </div>

          <div className="hidden md:flex items-center gap-[var(--link-gap,16px)]">
            {navLinks.map((label) => (
              <Link
                key={label}
                href={`#${label.toLowerCase()}`}
                className={
                  `text-sm text-[var(--text-color)] hover:text-[var(--accent-color)] transition ${
                    getVar("hover-underline", true) ? "hover:underline" : ""
                  }`
                }
              >
                {label}
              </Link>
            ))}

            <Link
              href={getVar("resume-link-url", "/resume.pdf")}
              className={
                `ml-4 inline-flex items-center px-3 py-1 text-sm font-medium bg-[var(--background-color)] border border-[var(--border-color)] text-[var(--text-color)] rounded-[var(--resume-border-radius,12px)] hover:bg-[var(--accent-color)] hover:text-white transition`
              }
            >
              {getVar("resume-link-text", "Download Resume")}
            </Link>
          </div>

          <div className="md:hidden">
            <Link href="#" className="text-sm text-[var(--muted-color)]">
              Menu
            </Link>
          </div>
        </nav>
      </header>

      {/* Hero */}
      <section
        id="hero"
        className="relative flex w-full items-center"
        style={{ padding: `${getVar("hero-padding-y", "80px")} var(--section-padding-x)` }}
      >
        <div className="mx-auto w-full max-w-[var(--max-content-width)] grid gap-[var(--hero-gap,24px)] md:grid-cols-2 items-center">
          <div>
            <h1
              className="font-extrabold leading-tight"
              style={{ fontSize: getVar("headline-size", "3rem") }}
            >
              <span className={getVar("is-highlighted", true) ? "bg-gradient-to-r from-[var(--accent-color)] to-rose-500 bg-clip-text text-transparent" : ""}>
                {getVar("headline", "Building reliable, delightful software.")}
              </span>
            </h1>
            <p className="mt-4 max-w-xl text-[var(--muted-color)]" style={{ fontSize: getVar("subheadline-size", "1.25rem") }}>
              {getVar(
                "subheadline",
                "Full-stack engineer specializing in TypeScript, Next.js, and cloud-native systems."
              )}
            </p>

            <div className="