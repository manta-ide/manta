"use client"

import React, { useState } from 'react';
import { getVar } from "@/lib/vars";
import Link from "next/link";

export default function Page() {
  // Form state and validation handlers
  const [formData, setFormData] = useState({ name: "", email: "", message: "" });
  const [errors, setErrors] = useState<{ name?: string; email?: string; message?: string }>({});
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };
  const validate = () => {
    const newErrors: { name?: string; email?: string; message?: string } = {};
    if (!formData.name.trim()) newErrors.name = "Name is required";
    if (!formData.email.trim()) newErrors.email = "Email is required";
    else if (!/^\S+@\S+\.\S+$/.test(formData.email)) newErrors.email = "Email is invalid";
    if (!formData.message.trim()) newErrors.message = "Message is required";
    return newErrors;
  };
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    const validationErrors = validate();
    if (Object.keys(validationErrors).length) {
      setErrors(validationErrors);
    } else {
      setErrors({});
      // TODO: replace with actual submission logic or API call
      console.log("Form submitted", formData);
      setFormData({ name: "", email: "", message: "" });
    }
  };
  
  return (
    <main
      style={{
        background: getVar(
          "swe-portfolio-page.page-background-color",
          "#ffffff"
        ),
        fontFamily: getVar(
          "swe-portfolio-page.font-family",
          "Arial, sans-serif"
        ),
        maxWidth: getVar(
          "swe-portfolio-page.max-page-width",
          "1200px"
        ),
      }}
      className="mx-auto min-h-screen px-4"
    >
      {/* Header Section */}
      <section
        id="header-section"
        style={{
          background: getVar(
            "header-section.header-background-color",
            "#f3f4f6"
          ),
          padding: getVar("header-section.header-padding", 20) + "px",
        }}
      >
        <h1
          className="font-bold"
          style={{
            fontSize: getVar("header-section.header-font-size", 24) + "px",
          }}
        >
          {getVar("header-section.header-title", "Your Name")}
        </h1>
        <p className="text-gray-600">
          {getVar("header-section.header-subtitle", "Software Engineer")}
        </p>
        {/* Navigation Bar */}
        <nav id="navigation-bar" className="mt-4 flex space-x-4">
          {getVar(
            "header-section.navigation-links",
            "Home, Projects, Skills, Contact"
          )
            .split(",")
            .map((link, idx) => {
              const label = link.trim();
              const targetId = label.toLowerCase() + "-section";
              return (
                <Link
                  key={idx}
                  href={`#${targetId}`}
                  style={{
                    color: getVar("navigation-bar.link-color", "#000000"),
                    fontSize:
                      getVar("navigation-bar.link-font-size", 18) + "px",
                  }}
                  className="hover:opacity-80"
                >
                  {label}
                </Link>
              );
            })}
        </nav>
      </section>

      {/* Projects Section */}
      <section
        id="projects-section"
        style={{
          background: getVar(
            "projects-section.projects-background-color",
            "#ffffff"
          ),
          padding: getVar("projects-section.projects-padding", 20) + "px",
        }}
        className="my-12"
      >
        <h2 className="text-3xl font-bold mb-6">
          {getVar("projects-section.section-title", "Projects")}
        </h2>
        <div
          className="grid gap-6"
          style={{
            gridTemplateColumns: `repeat(${getVar(
              "projects-section.grid-columns",
              3
            )}, minmax(0, 1fr))`,
          }}
        >
          {[1, 2, 3].map((i) => (
            <div
              key={i}
              id="project-card"
              style={{
                border: `1px solid ${getVar(
                  "project-card.card-border-color",
                  "#e5e7eb"
                )}`,
                padding: "16px",
                borderRadius: "8px",
              }}
            >
              <h3
                style={{
                  fontSize:
                    getVar("project-card.card-title-font-size", 18) + "px",
                  color: getVar(
                    "project-card.card-title-text-color",
                    "#1f2937"
                  ),
                }}
                className="font-semibold mb-2"
              >
                {getVar(
                  `project-card.title-${i}`,
                  `Project ${i}`
                )}
              </h3>
              <p
                style={{
                  fontSize:
                    getVar(
                      "project-card.card-description-font-size",
                      14
                    ) + "px",
                  color: getVar(
                    "project-card.card-description-text-color",
                    "#4b5563"
                  ),
                }}
                className="mb-4"
              >
                {getVar(
                  `project-card.description-${i}`,
                  "A description of this project."
                )}
              </p>
              <a
                href={getVar(`project-card.link-${i}`, "#")}
                style={{
                  color: getVar(
                    "project-card.card-link-text-color",
                    "#3b82f6"
                  ),
                }}
                className="underline"
              >
                {getVar(
                  `project-card.link-text-${i}`,
                  "View Repository"
                )}
              </a>
            </div>
          ))}
        </div>
      </section>

      {/* Skills Section */}
      <section
        id="skills-section"
        style={{
          background: getVar(
            "skills-section.skills-background-color",
            "#f9fafb"
          ),
          padding: getVar("skills-section.skills-padding", 20) + "px",
        }}
        className="my-12"
      >
        <h2 className="text-3xl font-bold mb-6">
          {getVar("skills-section.section-title", "Skills")}
        </h2>
        <div className="flex flex-wrap gap-4">
          {[
            "JavaScript",
            "TypeScript",
            "React",
            "Node.js",
            "GraphQL",
          ].map((skill) => (
            <span
              key={skill}
              id="skills-badge"
              style={{
                background: getVar(
                  "skills-badge.badge-background-color",
                  "#e5e7eb"
                ),
                fontSize:
                  getVar("skills-badge.badge-font-size", 14) + "px",
                color: getVar(
                  "skills-badge.badge-text-color",
                  "#1f2937"
                ),
                padding: "4px 8px",
                borderRadius: "4px",
              }}
            >
              {skill}
            </span>
          ))}
        </div>
      </section>

      {/* Contact Section */}
      <section
        id="contact-section"
        style={{
          background: getVar(
            "contact-section.contact-background-color",
            "#ffffff"
          ),
          padding: getVar("contact-section.contact-padding", 20) + "px",
        }}
        className="my-12"
      >
        <h2 className="text-3xl font-bold mb-6">
          {getVar("contact-section.section-title", "Contact")}
        </h2>
        <form
          id="contact-form"
          onSubmit={handleSubmit}
          noValidate
          className="max-w-lg"
        >
          <div className="mb-4">
            <label htmlFor="name" className="block text-sm font-medium mb-1">
              Name
            </label>
            <input
              id="name"
              name="name"
              type="text"
              placeholder={getVar(
                "contact-form.name-placeholder",
                "Enter your name"
              )}
              className="w-full border rounded p-2"
              value={formData.name}
              onChange={handleChange}
            />
            {errors.name && <p className="text-red-500 text-sm mt-1">{errors.name}</p>}
          </div>

          <div className="mb-4">
            <label htmlFor="email" className="block text-sm font-medium mb-1">
              Email
            </label>
            <input
              id="email"
              name="email"
              type="email"
              placeholder={getVar(
                "contact-form.email-placeholder",
                "Enter your email"
              )}
              className="w-full border rounded p-2"
              value={formData.email}
              onChange={handleChange}
            />
            {errors.email && <p className="text-red-500 text-sm mt-1">{errors.email}</p>}
          </div>

          <div className="mb-4">
            <label
              htmlFor="message"
              className="block text-sm font-medium mb-1"
            >
              Message
            </label>
            <textarea
              id="message"
              name="message"
              placeholder={getVar(
                "contact-form.message-placeholder",
                "Enter your message"
              )}
              className="w-full border rounded p-2"
              rows={5}
              value={formData.message}
              onChange={handleChange}
            />
            {errors.message && <p className="text-red-500 text-sm mt-1">{errors.message}</p>}
          </div>

          <button
            type="submit"
            style={{
              background: getVar(
                "contact-form.submit-button-color",
                "#10b981"
              ),
            }}
            className="text-white py-2 px-4 rounded"
          >
            {getVar("contact-form.submit-button-text", "Send Message")}
          </button>
        </form>
      </section>
    </main>
  );
}