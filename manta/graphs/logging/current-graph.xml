<?xml version="1.0" encoding="UTF-8"?>
<graph xmlns="urn:app:graph" version="1.0" directed="true">
  <nodes>
    <node id="frontend-console-logger" title="Frontend Console Logger" x="100" y="100" z="0">
      <description>Handles all frontend console logging including user interactions, component lifecycle events, project loading, file operations, graph interactions, and UI state changes. Uses structured emoji-based prefixes for easy identification and filtering.</description>
      <metadata>
        <file>src/lib/store.ts</file>
        <file>src/components/FloatingChat.tsx</file>
        <file>src/components/GraphView.tsx</file>
      </metadata>
      <props>
        <prop name="log-level" title="Log Level" type="select">
          <value>info</value>
          <options>
          <option>debug</option>
          <option>info</option>
          <option>warn</option>
          <option>error</option>
          </options>
        </prop>
        <prop name="emoji-prefixes" title="Enable Emoji Prefixes" type="boolean">true</prop>
        <prop name="log-categories" title="Log Categories" type="object-list">
        <item index="0">
          <field name="category" title="Category" type="text">project</field>
          <field name="emoji" title="Emoji" type="text">üìä</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="1">
          <field name="category" title="Category" type="text">files</field>
          <field name="emoji" title="Emoji" type="text">üíæ</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="2">
          <field name="category" title="Category" type="text">graph</field>
          <field name="emoji" title="Emoji" type="text">‚úÖ</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="3">
          <field name="category" title="Category" type="text">errors</field>
          <field name="emoji" title="Emoji" type="text">‚ùå</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="4">
          <field name="category" title="Category" type="text">warnings</field>
          <field name="emoji" title="Emoji" type="text">‚ö†Ô∏è</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
      </prop>
        <prop name="console-methods" title="Console Methods Used" type="object">
        <field name="log" title="log" type="text">General information and progress updates</field>
        <field name="error" title="error" type="text">Error conditions and failures</field>
        <field name="warn" title="warn" type="text">Warning conditions and non-critical issues</field>
        <field name="debug" title="debug" type="text">Debug information for development</field>
      </prop>
      </props>
    </node>

    <node id="backend-api-logger" title="Backend API Logger" x="400" y="100" z="0">
      <description>Manages server-side console logging for all API routes including graph operations, file management, chat requests, agent communication, and layer management. Provides structured logging with consistent formatting and error tracking.</description>
      <metadata>
        <file>src/app/api/graph-api/route.ts</file>
        <file>src/app/api/lib/graph-service.ts</file>
        <file>src/app/api/agent-request/route.ts</file>
        <file>src/app/api/chat/route.ts</file>
      </metadata>
      <props>
        <prop name="log-format" title="Log Format" type="select">
          <value>structured</value>
          <options>
          <option>simple</option>
          <option>structured</option>
          <option>json</option>
          </options>
        </prop>
        <prop name="include-timestamps" title="Include Timestamps" type="boolean">true</prop>
        <prop name="api-endpoints" title="Logged API Endpoints" type="object-list">
        <item index="0">
          <field name="endpoint" title="Endpoint" type="text">/api/graph-api</field>
          <field name="method" title="HTTP Method" type="select">
          <value>GET</value>
          <options>
          <option>GET</option>
          <option>POST</option>
          <option>PUT</option>
          <option>PATCH</option>
          <option>DELETE</option>
          </options>
        </field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="1">
          <field name="endpoint" title="Endpoint" type="text">/api/graph-api</field>
          <field name="method" title="HTTP Method" type="select">
          <value>PUT</value>
          <options>
          <option>GET</option>
          <option>POST</option>
          <option>PUT</option>
          <option>PATCH</option>
          <option>DELETE</option>
          </options>
        </field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="2">
          <field name="endpoint" title="Endpoint" type="text">/api/graph-api</field>
          <field name="method" title="HTTP Method" type="select">
          <value>PATCH</value>
          <options>
          <option>GET</option>
          <option>POST</option>
          <option>PUT</option>
          <option>PATCH</option>
          <option>DELETE</option>
          </options>
        </field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="3">
          <field name="endpoint" title="Endpoint" type="text">/api/agent-request</field>
          <field name="method" title="HTTP Method" type="select">
          <value>POST</value>
          <options>
          <option>GET</option>
          <option>POST</option>
          <option>PUT</option>
          <option>PATCH</option>
          <option>DELETE</option>
          </options>
        </field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="4">
          <field name="endpoint" title="Endpoint" type="text">/api/chat</field>
          <field name="method" title="HTTP Method" type="select">
          <value>POST</value>
          <options>
          <option>GET</option>
          <option>POST</option>
          <option>PUT</option>
          <option>PATCH</option>
          <option>DELETE</option>
          </options>
        </field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="5">
          <field name="endpoint" title="Endpoint" type="text">/api/files</field>
          <field name="method" title="HTTP Method" type="select">
          <value>PUT</value>
          <options>
          <option>GET</option>
          <option>POST</option>
          <option>PUT</option>
          <option>PATCH</option>
          <option>DELETE</option>
          </options>
        </field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
      </prop>
        <prop name="error-tracking" title="Error Tracking" type="object">
        <field name="track_500_errors" title="track_500_errors" type="text">true</field>
        <field name="track_validation_errors" title="track_validation_errors" type="text">true</field>
        <field name="track_auth_errors" title="track_auth_errors" type="text">true</field>
        <field name="include_stack_traces" title="include_stack_traces" type="text">true</field>
      </prop>
      </props>
    </node>

    <node id="graph-service-logger" title="Graph Service Logger" x="700" y="100" z="0">
      <description>Handles logging for graph state management, XML serialization, SSE broadcasting, file persistence, layer operations, and graph normalization. Tracks graph operations, broadcasting events, and data consistency operations.</description>
      <metadata>
        <file>src/app/api/lib/graph-service.ts</file>
        <file>src/lib/graph-xml.ts</file>
      </metadata>
      <props>
        <prop name="broadcast-logging" title="SSE Broadcast Logging" type="boolean">true</prop>
        <prop name="graph-operations" title="Graph Operations to Log" type="object-list">
        <item index="0">
          <field name="operation" title="Operation" type="text">graph_load</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="1">
          <field name="operation" title="Operation" type="text">graph_save</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="2">
          <field name="operation" title="Operation" type="text">broadcast_update</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="3">
          <field name="operation" title="Operation" type="text">normalization</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
        <item index="4">
          <field name="operation" title="Operation" type="text">layer_switch</field>
          <field name="enabled" title="Enabled" type="boolean">true</field>
        </item>
      </prop>
        <prop name="file-operations" title="File Operation Logging" type="object">
        <field name="log_xml_writes" title="log_xml_writes" type="text">true</field>
        <field name="log_file_reads" title="log_file_reads" type="text">true</field>
        <field name="log_directory_creation" title="log_directory_creation" type="text">true</field>
        <field name="include_file_sizes" title="include_file_sizes" type="text">true</field>
      </prop>
        <prop name="normalization-warnings" title="Graph Normalization Warnings" type="boolean">true</prop>
      </props>
    </node>
  </nodes>

  <edges>

  </edges>
</graph>
