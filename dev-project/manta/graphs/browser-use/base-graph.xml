<?xml version="1.0" encoding="UTF-8"?>
<graph xmlns="urn:app:graph" version="1.0" directed="true">
  <nodes>
    <node id="agent-orchestrator" title="Agent Orchestrator" x="448.7298057516548" y="-232.9722520910126" z="0">
      <description>Main AI agent that orchestrates browser automation tasks by taking high-level user requests, managing browser sessions, and executing LLM-driven action loops to complete complex web automation workflows.</description>
      <metadata>
        <file>browser_use/agent/service.py</file>
        <file>browser_use/agent/views.py</file>
        <file>browser_use/agent/prompts.py</file>
        <file>browser_use/agent/message_manager</file>
        <file>browser_use/agent/cloud_events.py</file>
      </metadata>
      <props>
        <prop name="component-type" title="Component Type" type="select">
          <value>Service</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="primary-responsibility" title="Primary Responsibility" type="text">Task orchestration and LLM-driven decision making for browser automation</prop>
        <prop name="key-interfaces" title="Key Interfaces" type="object-list">
        <item index="0">
          <field name="name" title="Interface Name" type="text">run()</field>
          <field name="purpose" title="Purpose" type="text">Execute autonomous browser tasks with natural language instructions</field>
        </item>
        <item index="1">
          <field name="name" title="Interface Name" type="text">step()</field>
          <field name="purpose" title="Purpose" type="text">Execute single action step in the automation workflow</field>
        </item>
        <item index="2">
          <field name="name" title="Interface Name" type="text">history</field>
          <field name="purpose" title="Purpose" type="text">Access complete execution history and conversation flow</field>
        </item>
      </prop>
        <prop name="dependencies" title="Dependencies" type="object-list">
        <item index="0">
          <field name="component" title="Component" type="text">BrowserSession</field>
          <field name="relationship" title="Relationship" type="text">Manages and coordinates browser instances</field>
        </item>
        <item index="1">
          <field name="component" title="Component" type="text">LLM Integration</field>
          <field name="relationship" title="Relationship" type="text">Uses for decision making and action planning</field>
        </item>
        <item index="2">
          <field name="component" title="Component" type="text">Tools Registry</field>
          <field name="relationship" title="Relationship" type="text">Executes browser actions through tool calls</field>
        </item>
        <item index="3">
          <field name="component" title="Component" type="text">MessageManager</field>
          <field name="relationship" title="Relationship" type="text">Manages conversation history and context</field>
        </item>
      </prop>
        <prop name="key-features" title="Key Features" type="object-list">
        <item index="0">
          <field name="feature" title="Feature" type="text">Autonomous Task Execution</field>
          <field name="description" title="Description" type="text">Takes high-level natural language tasks and breaks them down into browser actions</field>
        </item>
        <item index="1">
          <field name="feature" title="Feature" type="text">Error Handling &amp; Recovery</field>
          <field name="description" title="Description" type="text">Automatically recovers from failures and retries actions with different strategies</field>
        </item>
        <item index="2">
          <field name="feature" title="Feature" type="text">Context Management</field>
          <field name="description" title="Description" type="text">Maintains conversation history and task context across multiple steps</field>
        </item>
        <item index="3">
          <field name="feature" title="Feature" type="text">Cloud Integration</field>
          <field name="description" title="Description" type="text">Supports cloud-based agent execution with telemetry and monitoring</field>
        </item>
      </prop>
        <prop name="configuration-options" title="Configuration Options" type="object-list">
        <item index="0">
          <field name="option" title="Option" type="text">max_actions_per_step</field>
          <field name="purpose" title="Purpose" type="text">Limit actions per execution step to prevent runaway loops</field>
        </item>
        <item index="1">
          <field name="option" title="Option" type="text">include_attributes</field>
          <field name="purpose" title="Purpose" type="text">Control which DOM attributes are included in LLM context</field>
        </item>
        <item index="2">
          <field name="option" title="Option" type="text">save_conversation_path</field>
          <field name="purpose" title="Purpose" type="text">Configure where conversation history is saved</field>
        </item>
        <item index="3">
          <field name="option" title="Option" type="text">recording_path</field>
          <field name="purpose" title="Purpose" type="text">Enable and configure screen recording of browser sessions</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="browser-session-manager" title="Browser Session Manager" x="426.2411218227161" y="316.75045111881514" z="0">
      <description>Event-driven browser session manager that handles browser lifecycle, CDP (Chrome DevTools Protocol) connections, and coordinates multiple watchdog services through a central event bus architecture.</description>
      <metadata>
        <file>browser_use/browser/session.py</file>
        <file>browser_use/browser/events.py</file>
        <file>browser_use/browser/views.py</file>
        <file>browser_use/browser/cloud.py</file>
        <file>browser_use/browser/video_recorder.py</file>
      </metadata>
      <props>
        <prop name="browser-session-manager-component-type" title="Component Type" type="select">
          <value>Manager</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="browser-session-manager-primary-responsibility" title="Primary Responsibility" type="text">Browser lifecycle management and CDP connection coordination</prop>
        <prop name="architecture-pattern" title="Architecture Pattern" type="select">
          <value>Event-Driven</value>
          <options>
          <option>Event-Driven</option>
          <option>Request-Response</option>
          <option>Publisher-Subscriber</option>
          <option>Pipeline</option>
          <option>Layered</option>
          </options>
        </prop>
        <prop name="event-bus" title="Event Bus Integration" type="object">
        <field name="bus-library" title="Bus Library" type="text">bubus EventBus</field>
        <field name="coordination-scope" title="Coordination Scope" type="text">Coordinates all watchdog services and browser state changes</field>
      </prop>
        <prop name="cdp-integration" title="CDP Integration" type="object">
        <field name="cdp-library" title="CDP Library" type="text">cdp-use for typed CDP protocol access</field>
        <field name="connection-management" title="Connection Management" type="text">Manages WebSocket connections to Chrome DevTools Protocol</field>
      </prop>
        <prop name="key-capabilities" title="Key Capabilities" type="object-list">
        <item index="0">
          <field name="capability" title="Capability" type="text">Browser Launch Management</field>
          <field name="description" title="Description" type="text">Handles Chrome/Chromium browser startup with custom profiles and configurations</field>
        </item>
        <item index="1">
          <field name="capability" title="Capability" type="text">Tab Management</field>
          <field name="description" title="Description" type="text">Creates, switches between, and closes browser tabs</field>
        </item>
        <item index="2">
          <field name="capability" title="Capability" type="text">Navigation Control</field>
          <field name="description" title="Description" type="text">Manages page navigation, URL changes, and navigation events</field>
        </item>
        <item index="3">
          <field name="capability" title="Capability" type="text">Cloud Browser Support</field>
          <field name="description" title="Description" type="text">Connects to remote cloud-based browser instances</field>
        </item>
        <item index="4">
          <field name="capability" title="Capability" type="text">Session Persistence</field>
          <field name="description" title="Description" type="text">Maintains browser state and handles reconnection scenarios</field>
        </item>
      </prop>
        <prop name="supported-browsers" title="Supported Browsers" type="object-list">
        <item index="0">
          <field name="browser" title="Browser" type="text">Google Chrome</field>
          <field name="support-level" title="Support Level" type="select">
          <value>Full</value>
          <options>
          <option>Full</option>
          <option>Partial</option>
          <option>Experimental</option>
          </options>
        </field>
        </item>
        <item index="1">
          <field name="browser" title="Browser" type="text">Chromium</field>
          <field name="support-level" title="Support Level" type="select">
          <value>Full</value>
          <options>
          <option>Full</option>
          <option>Partial</option>
          <option>Experimental</option>
          </options>
        </field>
        </item>
        <item index="2">
          <field name="browser" title="Browser" type="text">Cloud Browsers</field>
          <field name="support-level" title="Support Level" type="select">
          <value>Full</value>
          <options>
          <option>Full</option>
          <option>Partial</option>
          <option>Experimental</option>
          </options>
        </field>
        </item>
      </prop>
      </props>
    </node>

    <node id="action-tools-registry" title="Action Tools Registry" x="-263.15276232888925" y="105.8929819139752" z="0">
      <description>Comprehensive registry system that maps LLM decisions to concrete browser operations, providing a standardized interface for all browser automation actions like clicking, typing, scrolling, and form interaction.</description>
      <metadata>
        <file>browser_use/tools/service.py</file>
        <file>browser_use/tools/views.py</file>
        <file>browser_use/tools/registry</file>
        <file>browser_use/actor</file>
      </metadata>
      <props>
        <prop name="action-tools-registry-component-type" title="Component Type" type="select">
          <value>Registry</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="action-tools-registry-primary-responsibility" title="Primary Responsibility" type="text">Maps LLM action decisions to executable browser operations</prop>
        <prop name="action-categories" title="Action Categories" type="object-list">
        <item index="0">
          <field name="category" title="Category" type="text">Navigation</field>
          <field name="actions" title="Actions" type="text">go_to_url, go_back, switch_tab, close_tab</field>
        </item>
        <item index="1">
          <field name="category" title="Category" type="text">Element Interaction</field>
          <field name="actions" title="Actions" type="text">click_element, input_text, send_keys, upload_file</field>
        </item>
        <item index="2">
          <field name="category" title="Category" type="text">Page Manipulation</field>
          <field name="actions" title="Actions" type="text">scroll, scroll_to_text, get_dropdown_options, select_dropdown</field>
        </item>
        <item index="3">
          <field name="category" title="Category" type="text">Data Extraction</field>
          <field name="actions" title="Actions" type="text">extract_page_content, search, get_url</field>
        </item>
        <item index="4">
          <field name="category" title="Category" type="text">Task Management</field>
          <field name="actions" title="Actions" type="text">done, ask_human, structured_output</field>
        </item>
      </prop>
        <prop name="execution-model" title="Execution Model" type="object">
        <field name="pattern" title="Pattern" type="text">Action -&gt; Event -&gt; Result pipeline with async execution</field>
        <field name="result-handling" title="Result Handling" type="text">Returns ActionResult with structured content for LLM reasoning</field>
      </prop>
        <prop name="integration-points" title="Integration Points" type="object-list">
        <item index="0">
          <field name="component" title="Component" type="text">BrowserSession</field>
          <field name="integration-type" title="Integration Type" type="text">Emits browser events for action execution</field>
        </item>
        <item index="1">
          <field name="component" title="Component" type="text">DOM Service</field>
          <field name="integration-type" title="Integration Type" type="text">Uses DOM context for element targeting</field>
        </item>
        <item index="2">
          <field name="component" title="Component" type="text">LLM Models</field>
          <field name="integration-type" title="Integration Type" type="text">Provides structured tool schemas for function calling</field>
        </item>
        <item index="3">
          <field name="component" title="Component" type="text">File System</field>
          <field name="integration-type" title="Integration Type" type="text">Handles file uploads and downloads</field>
        </item>
      </prop>
        <prop name="error-handling" title="Error Handling" type="object">
        <field name="strategy" title="Strategy" type="text">Returns BrowserError objects with detailed failure context</field>
        <field name="recovery" title="Recovery" type="text">Enables LLM to understand failures and retry with different approaches</field>
      </prop>
        <prop name="observability" title="Observability" type="object">
        <field name="tracing" title="Tracing" type="text">Laminar integration for action execution tracing</field>
        <field name="metrics" title="Metrics" type="text">Detailed logging and debugging support for action performance</field>
      </prop>
      </props>
    </node>

    <node id="dom-processing-service" title="DOM Processing Service" x="-299.19405306321005" y="566.099253285877" z="0">
      <description>Advanced DOM extraction and processing service that converts raw HTML into structured, AI-readable content with element highlighting, accessibility tree generation, and intelligent content serialization for LLM consumption.</description>
      <metadata>
        <file>browser_use/dom/service.py</file>
        <file>browser_use/dom/views.py</file>
        <file>browser_use/dom/serializer</file>
        <file>browser_use/dom/enhanced_snapshot.py</file>
        <file>browser_use/dom/utils.py</file>
      </metadata>
      <props>
        <prop name="dom-processing-service-component-type" title="Component Type" type="select">
          <value>Service</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="dom-processing-service-primary-responsibility" title="Primary Responsibility" type="text">Extract and process DOM content for AI consumption and element interaction</prop>
        <prop name="processing-capabilities" title="Processing Capabilities" type="object-list">
        <item index="0">
          <field name="capability" title="Capability" type="text">DOM Tree Serialization</field>
          <field name="description" title="Description" type="text">Converts complex HTML DOM into structured, LLM-readable format</field>
        </item>
        <item index="1">
          <field name="capability" title="Capability" type="text">Element Highlighting</field>
          <field name="description" title="Description" type="text">Adds visual overlays to identify clickable and interactive elements</field>
        </item>
        <item index="2">
          <field name="capability" title="Capability" type="text">Accessibility Tree Generation</field>
          <field name="description" title="Description" type="text">Creates accessibility-focused representation for better element targeting</field>
        </item>
        <item index="3">
          <field name="capability" title="Capability" type="text">Paint Order Filtering</field>
          <field name="description" title="Description" type="text">Filters elements based on visual rendering order to focus on visible content</field>
        </item>
        <item index="4">
          <field name="capability" title="Capability" type="text">Cross-Origin Iframe Support</field>
          <field name="description" title="Description" type="text">Handles iframe content extraction with security considerations</field>
        </item>
      </prop>
        <prop name="serialization-features" title="Serialization Features" type="object-list">
        <item index="0">
          <field name="feature" title="Feature" type="text">Clickable Element Detection</field>
          <field name="purpose" title="Purpose" type="text"></field>
        </item>
        <item index="1">
          <field name="feature" title="Feature" type="text">Content Filtering</field>
          <field name="purpose" title="Purpose" type="text"></field>
        </item>
        <item index="2">
          <field name="feature" title="Feature" type="text">Bounding Box Calculation</field>
          <field name="purpose" title="Purpose" type="text"></field>
        </item>
        <item index="3">
          <field name="feature" title="Feature" type="text">Computed Style Integration</field>
          <field name="purpose" title="Purpose" type="text"></field>
        </item>
      </prop>
        <prop name="ai-optimization" title="AI Optimization" type="object">
        <field name="content-structuring" title="Content Structuring" type="text">Hierarchical DOM representation optimized for LLM reasoning</field>
        <field name="token-efficiency" title="Token Efficiency" type="text">Intelligent content pruning to reduce LLM context size while preserving actionability</field>
      </prop>
        <prop name="dom-processing-service-configuration-options" title="Configuration Options" type="object-list">
        <item index="0">
          <field name="option" title="Option" type="text">max_iframes</field>
          <field name="description" title="Description" type="text">Limit number of iframes processed per page</field>
        </item>
        <item index="1">
          <field name="option" title="Option" type="text">max_iframe_depth</field>
          <field name="description" title="Description" type="text">Control nested iframe processing depth</field>
        </item>
        <item index="2">
          <field name="option" title="Option" type="text">paint_order_filtering</field>
          <field name="description" title="Description" type="text">Enable/disable visual rendering order filtering</field>
        </item>
        <item index="3">
          <field name="option" title="Option" type="text">cross_origin_iframes</field>
          <field name="description" title="Description" type="text">Control cross-origin iframe content extraction</field>
        </item>
      </prop>
        <prop name="performance-features" title="Performance Features" type="object-list">
        <item index="0">
          <field name="feature" title="Feature" type="text">Snapshot Caching</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="1">
          <field name="feature" title="Feature" type="text">Lazy Loading</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="2">
          <field name="feature" title="Feature" type="text">Batch Processing</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
      </prop>
      </props>
    </node>

    <node id="llm-integration-layer" title="LLM Integration Layer" x="-501.043971925138" y="-237.37943061161886" z="0">
      <description>Unified abstraction layer for Large Language Model integration that supports multiple providers (OpenAI, Anthropic, Google, Groq) with consistent interfaces, structured output handling, and optimized message serialization for browser automation workflows.</description>
      <metadata>
        <file>browser_use/llm/base.py</file>
        <file>browser_use/llm/messages.py</file>
        <file>browser_use/llm/schema.py</file>
        <file>browser_use/llm/views.py</file>
        <file>browser_use/llm/openai</file>
        <file>browser_use/llm/anthropic</file>
        <file>browser_use/llm/google</file>
        <file>browser_use/llm/groq</file>
        <file>browser_use/llm/aws</file>
        <file>browser_use/llm/azure</file>
        <file>browser_use/llm/deepseek</file>
        <file>browser_use/llm/ollama</file>
        <file>browser_use/llm/openrouter</file>
      </metadata>
      <props>
        <prop name="llm-integration-layer-component-type" title="Component Type" type="select">
          <value>Integration</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="llm-integration-layer-primary-responsibility" title="Primary Responsibility" type="text">Unified interface for multiple LLM providers with browser automation optimizations</prop>
        <prop name="supported-providers" title="Supported Providers" type="object-list">
        <item index="0">
          <field name="provider" title="Provider" type="text">OpenAI</field>
          <field name="models" title="Key Models" type="text">gpt-4o, gpt-4o-mini, gpt-3.5-turbo</field>
          <field name="features" title="Special Features" type="text">Function calling, structured outputs, vision</field>
        </item>
        <item index="1">
          <field name="provider" title="Provider" type="text">Anthropic</field>
          <field name="models" title="Key Models" type="text">claude-3.5-sonnet, claude-3-haiku</field>
          <field name="features" title="Special Features" type="text">Tool use, caching, large context windows</field>
        </item>
        <item index="2">
          <field name="provider" title="Provider" type="text">Google</field>
          <field name="models" title="Key Models" type="text">gemini-pro, gemini-pro-vision</field>
          <field name="features" title="Special Features" type="text">Multimodal capabilities, fast inference</field>
        </item>
        <item index="3">
          <field name="provider" title="Provider" type="text">Groq</field>
          <field name="models" title="Key Models" type="text">llama3-70b, mixtral-8x7b</field>
          <field name="features" title="Special Features" type="text">High-speed inference, cost optimization</field>
        </item>
        <item index="4">
          <field name="provider" title="Provider" type="text">AWS Bedrock</field>
          <field name="models" title="Key Models" type="text">claude-3, titan-text</field>
          <field name="features" title="Special Features" type="text">Enterprise security, regional deployment</field>
        </item>
        <item index="5">
          <field name="provider" title="Provider" type="text">Azure OpenAI</field>
          <field name="models" title="Key Models" type="text">gpt-4, gpt-35-turbo</field>
          <field name="features" title="Special Features" type="text">Enterprise integration, compliance</field>
        </item>
        <item index="6">
          <field name="provider" title="Provider" type="text">Ollama</field>
          <field name="models" title="Key Models" type="text">llama3, mistral, codellama</field>
          <field name="features" title="Special Features" type="text">Local deployment, privacy</field>
        </item>
        <item index="7">
          <field name="provider" title="Provider" type="text">OpenRouter</field>
          <field name="models" title="Key Models" type="text">Various open-source models</field>
          <field name="features" title="Special Features" type="text">Model aggregation, cost comparison</field>
        </item>
      </prop>
        <prop name="core-interfaces" title="Core Interfaces" type="object-list">
        <item index="0">
          <field name="method" title="Method" type="text">ainvoke()</field>
          <field name="purpose" title="Purpose" type="text">Async LLM invocation with message history and optional structured output</field>
        </item>
        <item index="1">
          <field name="method" title="Method" type="text">BaseChatModel Protocol</field>
          <field name="purpose" title="Purpose" type="text">Common interface ensuring provider compatibility</field>
        </item>
        <item index="2">
          <field name="method" title="Method" type="text">Output Format Support</field>
          <field name="purpose" title="Purpose" type="text">Pydantic model-based structured output parsing</field>
        </item>
      </prop>
        <prop name="message-handling" title="Message Handling" type="object">
        <field name="message-types" title="Message Types" type="text">System, User, Assistant messages with role-based conversation flow</field>
        <field name="content-support" title="Content Support" type="text">Text, images, tool calls, and structured content with multimodal capabilities</field>
      </prop>
        <prop name="browser-optimizations" title="Browser Automation Optimizations" type="object-list">
        <item index="0">
          <field name="optimization" title="Optimization" type="text">Screenshot Integration</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="1">
          <field name="optimization" title="Optimization" type="text">DOM Content Serialization</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="2">
          <field name="optimization" title="Optimization" type="text">Tool Call Schema Generation</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="3">
          <field name="optimization" title="Optimization" type="text">Context Window Management</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
      </prop>
        <prop name="llm-integration-layer-error-handling" title="Error Handling" type="object">
        <field name="retry-logic" title="Retry Logic" type="text">Automatic retry with exponential backoff for transient failures</field>
        <field name="fallback-strategy" title="Fallback Strategy" type="text">Provider-specific error handling with graceful degradation</field>
      </prop>
        <prop name="llm-integration-layer-performance-features" title="Performance Features" type="object-list">
        <item index="0">
          <field name="feature" title="Feature" type="text">Async Processing</field>
          <field name="description" title="Description" type="text">Non-blocking LLM calls for responsive browser automation</field>
        </item>
        <item index="1">
          <field name="feature" title="Feature" type="text">Token Optimization</field>
          <field name="description" title="Description" type="text">Smart content truncation and compression techniques</field>
        </item>
        <item index="2">
          <field name="feature" title="Feature" type="text">Response Caching</field>
          <field name="description" title="Description" type="text">Cache common responses to reduce API costs and latency</field>
        </item>
        <item index="3">
          <field name="feature" title="Feature" type="text">Streaming Support</field>
          <field name="description" title="Description" type="text">Streaming responses for real-time feedback where supported</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="watchdog-system" title="Event-Driven Watchdog System" x="426.24112182271625" y="660.2062713719018" z="0">
      <description>Collection of specialized watchdog services coordinated through an event bus that monitor and handle different aspects of browser automation including downloads, popups, security, DOM changes, crashes, and navigation edge cases.</description>
      <metadata>
        <file>browser_use/browser/watchdog_base.py</file>
        <file>browser_use/browser/watchdogs</file>
        <file>browser_use/browser/watchdogs/downloads_watchdog.py</file>
        <file>browser_use/browser/watchdogs/popups_watchdog.py</file>
        <file>browser_use/browser/watchdogs/security_watchdog.py</file>
        <file>browser_use/browser/watchdogs/dom_watchdog.py</file>
        <file>browser_use/browser/watchdogs/aboutblank_watchdog.py</file>
        <file>browser_use/browser/watchdogs/crash_watchdog.py</file>
        <file>browser_use/browser/watchdogs/screenshot_watchdog.py</file>
      </metadata>
      <props>
        <prop name="watchdog-system-component-type" title="Component Type" type="select">
          <value>System</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="watchdog-system-primary-responsibility" title="Primary Responsibility" type="text">Monitor and automatically handle browser events and edge cases through specialized watchdog services</prop>
        <prop name="watchdog-services" title="Watchdog Services" type="object-list">
        <item index="0">
          <field name="service" title="Service" type="text">DownloadsWatchdog</field>
          <field name="responsibility" title="Responsibility" type="text">Handle file downloads and PDF auto-download</field>
          <field name="triggers" title="Triggers" type="text">Download events, file completion notifications</field>
        </item>
        <item index="1">
          <field name="service" title="Service" type="text">PopupsWatchdog</field>
          <field name="responsibility" title="Responsibility" type="text">Manage JavaScript dialogs and browser popups</field>
          <field name="triggers" title="Triggers" type="text">Alert, confirm, prompt dialogs</field>
        </item>
        <item index="2">
          <field name="service" title="Service" type="text">SecurityWatchdog</field>
          <field name="responsibility" title="Responsibility" type="text">Enforce domain restrictions and security policies</field>
          <field name="triggers" title="Triggers" type="text">Navigation attempts, URL changes</field>
        </item>
        <item index="3">
          <field name="service" title="Service" type="text">DOMWatchdog</field>
          <field name="responsibility" title="Responsibility" type="text">Process DOM snapshots and element highlighting</field>
          <field name="triggers" title="Triggers" type="text">DOM mutations, page load completion</field>
        </item>
        <item index="4">
          <field name="service" title="Service" type="text">AboutBlankWatchdog</field>
          <field name="responsibility" title="Responsibility" type="text">Handle empty page redirects and navigation</field>
          <field name="triggers" title="Triggers" type="text">about:blank navigation, empty page loads</field>
        </item>
        <item index="5">
          <field name="service" title="Service" type="text">CrashWatchdog</field>
          <field name="responsibility" title="Responsibility" type="text">Detect and handle browser crashes</field>
          <field name="triggers" title="Triggers" type="text">Process termination, connection loss</field>
        </item>
        <item index="6">
          <field name="service" title="Service" type="text">ScreenshotWatchdog</field>
          <field name="responsibility" title="Responsibility" type="text">Capture and manage page screenshots</field>
          <field name="triggers" title="Triggers" type="text">Page changes, action completion</field>
        </item>
      </prop>
        <prop name="coordination-mechanism" title="Coordination Mechanism" type="object">
        <field name="event-bus" title="Event Bus" type="text">bubus EventBus for decoupled service coordination</field>
        <field name="communication-pattern" title="Communication Pattern" type="text">Publish-subscribe pattern with event-driven activation</field>
      </prop>
        <prop name="base-architecture" title="Base Architecture" type="object">
        <field name="base-class" title="Base Class" type="text">WatchdogBase provides common watchdog functionality and interfaces</field>
        <field name="lifecycle-management" title="Lifecycle Management" type="text">Automatic start/stop with browser session lifecycle</field>
      </prop>
        <prop name="event-handling" title="Event Handling" type="object-list">
        <item index="0">
          <field name="event-type" title="Event Type" type="text">Browser Events</field>
          <field name="handling-strategy" title="Handling Strategy" type="text">CDP event registration with typed event handlers</field>
        </item>
        <item index="1">
          <field name="event-type" title="Event Type" type="text">File System Events</field>
          <field name="handling-strategy" title="Handling Strategy" type="text">File system monitoring for download completion</field>
        </item>
        <item index="2">
          <field name="event-type" title="Event Type" type="text">Navigation Events</field>
          <field name="handling-strategy" title="Handling Strategy" type="text">URL change detection with security validation</field>
        </item>
        <item index="3">
          <field name="event-type" title="Event Type" type="text">DOM Events</field>
          <field name="handling-strategy" title="Handling Strategy" type="text">Mutation observers and snapshot triggers</field>
        </item>
      </prop>
        <prop name="automation-features" title="Automation Features" type="object-list">
        <item index="0">
          <field name="feature" title="Feature" type="text">Automatic Popup Dismissal</field>
          <field name="description" title="Description" type="text">Handles JavaScript alerts and confirmations without manual intervention</field>
        </item>
        <item index="1">
          <field name="feature" title="Feature" type="text">File Download Management</field>
          <field name="description" title="Description" type="text">Automatically handles downloads and provides file access to agents</field>
        </item>
        <item index="2">
          <field name="feature" title="Feature" type="text">Security Policy Enforcement</field>
          <field name="description" title="Description" type="text">Prevents navigation to unauthorized domains and malicious content</field>
        </item>
        <item index="3">
          <field name="feature" title="Feature" type="text">Crash Recovery</field>
          <field name="description" title="Description" type="text">Detects browser crashes and initiates recovery procedures</field>
        </item>
      </prop>
        <prop name="watchdog-system-integration-points" title="Integration Points" type="object-list">
        <item index="0">
          <field name="component" title="Component" type="text">BrowserSession</field>
          <field name="integration-type" title="Integration Type" type="text">Lifecycle management and CDP event access</field>
        </item>
        <item index="1">
          <field name="component" title="Component" type="text">Agent</field>
          <field name="integration-type" title="Integration Type" type="text">Event notifications and status updates</field>
        </item>
        <item index="2">
          <field name="component" title="Component" type="text">DOM Service</field>
          <field name="integration-type" title="Integration Type" type="text">DOM change notifications and screenshot coordination</field>
        </item>
        <item index="3">
          <field name="component" title="Component" type="text">File System</field>
          <field name="integration-type" title="Integration Type" type="text">Download file management and access</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="mcp-integration" title="MCP Integration" x="264.6421085161487" y="33.28175029871609" z="0">
      <description>Model Context Protocol integration that enables browser-use to operate both as an MCP server exposing browser automation tools to clients like Claude Desktop, and as an MCP client connecting to external servers for extended capabilities like filesystem and GitHub access.</description>
      <metadata>
        <file>browser_use/mcp/server.py</file>
        <file>browser_use/mcp/client.py</file>
        <file>browser_use/mcp/controller.py</file>
        <file>browser_use/mcp/__init__.py</file>
        <file>browser_use/mcp/__main__.py</file>
      </metadata>
      <props>
        <prop name="mcp-integration-component-type" title="Component Type" type="select">
          <value>Integration</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="mcp-integration-primary-responsibility" title="Primary Responsibility" type="text">Bidirectional MCP integration for exposing browser tools and consuming external MCP services</prop>
        <prop name="operational-modes" title="Operational Modes" type="object-list">
        <item index="0">
          <field name="mode" title="Mode" type="text">MCP Server</field>
          <field name="description" title="Description" type="text">Exposes browser automation tools via MCP protocol</field>
          <field name="use-case" title="Use Case" type="text">Claude Desktop integration for AI-powered browser automation</field>
        </item>
        <item index="1">
          <field name="mode" title="Mode" type="text">MCP Client</field>
          <field name="description" title="Description" type="text">Connects to external MCP servers to extend agent capabilities</field>
          <field name="use-case" title="Use Case" type="text">Access filesystem, GitHub, databases, and other external services</field>
        </item>
      </prop>
        <prop name="server-capabilities" title="Server Capabilities" type="object-list">
        <item index="0">
          <field name="capability" title="Capability" type="text">Browser Automation Tools</field>
          <field name="description" title="Description" type="text">Full suite of browser actions available as MCP tools</field>
        </item>
        <item index="1">
          <field name="capability" title="Capability" type="text">Content Extraction</field>
          <field name="description" title="Description" type="text">Web page content and data extraction capabilities</field>
        </item>
        <item index="2">
          <field name="capability" title="Capability" type="text">File Operations</field>
          <field name="description" title="Description" type="text">Download and upload file handling through browser</field>
        </item>
        <item index="3">
          <field name="capability" title="Capability" type="text">Session Management</field>
          <field name="description" title="Description" type="text">Browser session lifecycle control and state management</field>
        </item>
      </prop>
        <prop name="client-integrations" title="Client Integrations" type="object-list">
        <item index="0">
          <field name="service-type" title="Service Type" type="text">Filesystem MCP</field>
          <field name="capabilities" title="Capabilities" type="text">File read/write operations for data persistence and processing</field>
        </item>
        <item index="1">
          <field name="service-type" title="Service Type" type="text">GitHub MCP</field>
          <field name="capabilities" title="Capabilities" type="text">Repository access, issue management, and code interaction</field>
        </item>
        <item index="2">
          <field name="service-type" title="Service Type" type="text">Database MCP</field>
          <field name="capabilities" title="Capabilities" type="text">Data storage and retrieval for automation workflows</field>
        </item>
        <item index="3">
          <field name="service-type" title="Service Type" type="text">Custom MCP Servers</field>
          <field name="capabilities" title="Capabilities" type="text">Domain-specific integrations and specialized tool access</field>
        </item>
      </prop>
        <prop name="protocol-features" title="Protocol Features" type="object">
        <field name="communication" title="Communication" type="text">JSON-RPC over stdio for reliable client-server communication</field>
        <field name="serialization" title="Serialization" type="text">Structured tool schemas with typed parameters and responses</field>
      </prop>
        <prop name="deployment-options" title="Deployment Options" type="object-list">
        <item index="0">
          <field name="method" title="Method" type="text">Standalone Server</field>
          <field name="command" title="Command" type="text">uvx browser-use[cli] --mcp</field>
        </item>
        <item index="1">
          <field name="method" title="Method" type="text">Claude Desktop Integration</field>
          <field name="command" title="Command" type="text">Configure in Claude Desktop MCP settings</field>
        </item>
        <item index="2">
          <field name="method" title="Method" type="text">Custom Client Integration</field>
          <field name="command" title="Command" type="text">Connect via MCP client libraries</field>
        </item>
      </prop>
        <prop name="mcp-integration-configuration-options" title="Configuration Options" type="object-list">
        <item index="0">
          <field name="option" title="Option" type="text">Logging Level Control</field>
          <field name="purpose" title="Purpose" type="text">Minimize server output for clean MCP communication</field>
        </item>
        <item index="1">
          <field name="option" title="Option" type="text">Tool Exposure Settings</field>
          <field name="purpose" title="Purpose" type="text">Configure which browser tools are exposed via MCP</field>
        </item>
        <item index="2">
          <field name="option" title="Option" type="text">Security Settings</field>
          <field name="purpose" title="Purpose" type="text">Control access permissions and domain restrictions</field>
        </item>
        <item index="3">
          <field name="option" title="Option" type="text">Resource Limits</field>
          <field name="purpose" title="Purpose" type="text">Manage browser resource usage in server mode</field>
        </item>
      </prop>
      </props>
    </node>

    <node id="browser-profile-manager" title="Browser Profile Manager" x="865.4480554529387" y="310.01932085051874" z="0">
      <description>Comprehensive browser configuration system that handles Chrome launch arguments, display detection, extension management (uBlock Origin, cookie handlers), proxy settings, and security configurations with automatic display size detection and cross-platform compatibility.</description>
      <metadata>
        <file>browser_use/browser/profile.py</file>
        <file>browser_use/config.py</file>
      </metadata>
      <props>
        <prop name="browser-profile-manager-component-type" title="Component Type" type="select">
          <value>Manager</value>
          <options>
          <option>Service</option>
          <option>Manager</option>
          <option>Registry</option>
          <option>Integration</option>
          <option>System</option>
          </options>
        </prop>
        <prop name="browser-profile-manager-primary-responsibility" title="Primary Responsibility" type="text">Browser launch configuration, extension management, and display optimization</prop>
        <prop name="configuration-domains" title="Configuration Domains" type="object-list">
        <item index="0">
          <field name="domain" title="Domain" type="text">Launch Arguments</field>
          <field name="scope" title="Scope" type="text">Chrome/Chromium startup parameters and feature flags</field>
        </item>
        <item index="1">
          <field name="domain" title="Domain" type="text">Display Configuration</field>
          <field name="scope" title="Scope" type="text">Window sizing, positioning, and multi-monitor support</field>
        </item>
        <item index="2">
          <field name="domain" title="Domain" type="text">Extension Management</field>
          <field name="scope" title="Scope" type="text">uBlock Origin, cookie handlers, and custom extensions</field>
        </item>
        <item index="3">
          <field name="domain" title="Domain" type="text">Security Settings</field>
          <field name="scope" title="Scope" type="text">Proxy configuration, certificate handling, and sandboxing</field>
        </item>
        <item index="4">
          <field name="domain" title="Domain" type="text">Profile Management</field>
          <field name="scope" title="Scope" type="text">User data directories, cookies, and session persistence</field>
        </item>
      </prop>
        <prop name="display-detection" title="Display Detection" type="object">
        <field name="platforms" title="Supported Platforms" type="text">macOS (AppKit.NSScreen), Linux/Windows (screeninfo)</field>
        <field name="libraries" title="Detection Libraries" type="text">Platform-specific screen detection with fallback mechanisms</field>
      </prop>
        <prop name="extension-ecosystem" title="Extension Ecosystem" type="object-list">
        <item index="0">
          <field name="extension" title="Extension" type="text">uBlock Origin</field>
          <field name="purpose" title="Purpose" type="text">Ad blocking and content filtering</field>
          <field name="configuration" title="Configuration" type="text">Configurable whitelist for allowed domains</field>
        </item>
        <item index="1">
          <field name="extension" title="Extension" type="text">Cookie Handlers</field>
          <field name="purpose" title="Purpose" type="text">Cookie consent and privacy controls</field>
          <field name="configuration" title="Configuration" type="text">Automatic cookie banner dismissal</field>
        </item>
        <item index="2">
          <field name="extension" title="Extension" type="text">Custom Extensions</field>
          <field name="purpose" title="Purpose" type="text">User-provided browser extensions</field>
          <field name="configuration" title="Configuration" type="text">Dynamic loading from file paths or URLs</field>
        </item>
      </prop>
        <prop name="launch-optimization" title="Launch Optimization" type="object-list">
        <item index="0">
          <field name="feature" title="Feature" type="text">Argument Deduplication</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="1">
          <field name="feature" title="Feature" type="text">Component Disabling</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="2">
          <field name="feature" title="Feature" type="text">Debug Port Management</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
        <item index="3">
          <field name="feature" title="Feature" type="text">Headless/Headful Mode</field>
          <field name="benefit" title="Benefit" type="text"></field>
        </item>
      </prop>
        <prop name="security-features" title="Security Features" type="object-list">
        <item index="0">
          <field name="feature" title="Feature" type="text">Sandbox Control</field>
          <field name="description" title="Description" type="text">Configurable sandboxing for security vs functionality balance</field>
        </item>
        <item index="1">
          <field name="feature" title="Feature" type="text">Certificate Handling</field>
          <field name="description" title="Description" type="text">Custom certificate authorities and SSL configuration</field>
        </item>
        <item index="2">
          <field name="feature" title="Feature" type="text">Proxy Support</field>
          <field name="description" title="Description" type="text">HTTP/HTTPS/SOCKS proxy configuration with authentication</field>
        </item>
        <item index="3">
          <field name="feature" title="Feature" type="text">User Agent Customization</field>
          <field name="description" title="Description" type="text">Configurable user agent strings for compatibility</field>
        </item>
      </prop>
        <prop name="cross-platform-support" title="Cross-Platform Support" type="object">
        <field name="platforms" title="Supported Platforms" type="text">macOS, Linux, Windows with platform-specific optimizations</field>
        <field name="browser-detection" title="Browser Detection" type="text">Automatic Chrome/Chromium binary detection and validation</field>
      </prop>
        <prop name="performance-tuning" title="Performance Tuning" type="object-list">
        <item index="0">
          <field name="parameter" title="Parameter" type="text">Memory Management</field>
          <field name="optimization" title="Optimization" type="text">Optimized memory limits and garbage collection settings</field>
        </item>
        <item index="1">
          <field name="parameter" title="Parameter" type="text">GPU Acceleration</field>
          <field name="optimization" title="Optimization" type="text">Configurable hardware acceleration for rendering performance</field>
        </item>
        <item index="2">
          <field name="parameter" title="Parameter" type="text">Network Optimization</field>
          <field name="optimization" title="Optimization" type="text">Customized network stack settings for automation workloads</field>
        </item>
        <item index="3">
          <field name="parameter" title="Parameter" type="text">Resource Limits</field>
          <field name="optimization" title="Optimization" type="text">Configurable limits for CPU, memory, and network usage</field>
        </item>
      </prop>
      </props>
    </node>
  </nodes>

  <edges>
    <edge id="agent-orchestrator-browser-session-manager" source="agent-orchestrator" target="browser-session-manager" role="manages"/>
    <edge id="agent-orchestrator-llm-integration-layer" source="agent-orchestrator" target="llm-integration-layer" role="uses"/>
    <edge id="agent-orchestrator-action-tools-registry" source="agent-orchestrator" target="action-tools-registry" role="executes"/>
    <edge id="agent-orchestrator-mcp-integration" source="agent-orchestrator" target="mcp-integration" role="exposes"/>
    <edge id="browser-session-manager-watchdog-system" source="browser-session-manager" target="watchdog-system" role="coordinates"/>
    <edge id="browser-session-manager-browser-profile-manager" source="browser-session-manager" target="browser-profile-manager" role="configures"/>
    <edge id="action-tools-registry-browser-session-manager" source="action-tools-registry" target="browser-session-manager" role="emits_events"/>
    <edge id="action-tools-registry-dom-processing-service" source="action-tools-registry" target="dom-processing-service" role="uses"/>
    <edge id="dom-processing-service-browser-session-manager" source="dom-processing-service" target="browser-session-manager" role="accesses"/>
    <edge id="watchdog-system-dom-processing-service" source="watchdog-system" target="dom-processing-service" role="triggers"/>
    <edge id="mcp-integration-action-tools-registry" source="mcp-integration" target="action-tools-registry" role="exposes"/>
    <edge id="action-tools-registry-llm-integration-layer" source="action-tools-registry" target="llm-integration-layer" role="provides_schemas"/>
  </edges>
</graph>
